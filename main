#!/bin/bash
#PBS -l nodes=1:ppn=8,vmem=16gb,walltime=00:30:00
#PBS -N BROCCOLI
#PBS -V

set -e
set -x

rm -rf output
mkdir output

#convert input into bids
bl2bids

sub=$(jq -r "._inputs[0].meta.subject" config.json | tr -d "_")
if [[ -z $sub || $sub == null ]]; then
    sub=0
fi

taskname=$(jq -r '._inputs[] | select(.id == "fmri") | .meta.task' config.json)
echo "task: $taskname"

oDir=bids/sub-$sub
ses=$(jq -r '._inputs[] | select(.id == "fmri") | .meta.session' config.json)
[ "$ses" != "null" ] && oDir=$oDir/ses-$ses

bold_json=$(find $oDir/func -name "*_bold.json")
[[ -f $bold_json ]] && cp $bold_json bids/task-${taskname}_bold.json

start=`date +%s`

time singularity run --nv -e \
  -B `pwd`/bids:/bids \
  -B `pwd`/output:/output \
  docker://bids/broccoli:v1.0.1 \
  /bids /output participant --participant_label $sub
  
end=`date +%s`
runtime=$((end-start))
echo "Runtime for first-level analysis: $runtime seconds"

#tscores thresholding
tscores=output/sub-${sub}/$taskname/sub-${sub}_tscores_contrast0001_MNI.nii
map=output/sub-${sub}/activation_map_MNI.nii.gz
mask=output/sub-${sub}/$taskname/sub-${sub}_mask_mni.nii
thr=`jq -r '.thr' config.json`
singularity exec -e docker://brainlife/fsl:6.0.4 fslmaths $tscores -thr $thr -mas $mask $map

#extract brain from t1
t1=output/sub-${sub}/$taskname/sub-${sub}_t1_aligned_mni_nonlinear.nii
singularity exec -e docker://brainlife/fsl:6.0.4 bet $t1 output/sub-${sub}/t1_masked.nii.gz

#extract brain from epi
epi=output/sub-${sub}/$taskname/sub-${sub}_epi_aligned_mni_nonlinear.nii
singularity exec -e docker://brainlife/fsl:6.0.4 bet $epi output/sub-${sub}/epi_masked.nii.gz

#save overlay figures
time singularity exec -e docker://brainlife/fsleyes:1.0 xvfb-run -s "-screen 0 640x480x24" ./save_figures.sh $map output/sub-${sub}/t1_masked.nii.gz output/sub-${sub}/epi_masked.nii.gz

#store QC graph on product.json
cat << EOF > product.json
{
    "brainlife": [
        { 
            "type": "image/png", 
	    "name": "overlay t1 and map",
            "base64": "$(base64 -w 0 figures/t1_map_mni.png)"
        },
        { 
            "type": "image/png", 
	    "name": "overlay epi and map",
            "base64": "$(base64 -w 0 figures/epi_map_mni.png)"
        }
    ]
}
EOF
